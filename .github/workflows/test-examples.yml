name: Test Terraform Examples

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      examples-path:
        description: 'Path to examples directory'
        required: false
        default: 'examples'
      terraform-version:
        description: 'Terraform version to use'
        required: false
        default: 'latest'

jobs:
  # First job: Generate the matrix of examples to test
  discover-examples:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      examples-count: ${{ steps.set-matrix.outputs.examples-count }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Discover example directories
        id: set-matrix
        run: |
          EXAMPLES_PATH="docs/examples"
          echo "🔍 Discovering examples in $EXAMPLES_PATH..."

          # Find all directories under examples path
          examples=()
          if [ -d "$EXAMPLES_PATH" ]; then
            for example_dir in "$EXAMPLES_PATH"/*/; do
              if [ -d "$example_dir" ]; then
                example_name=$(basename "$example_dir")
                examples+=("$example_name")
                echo "📁 Found example: $example_name"
              fi
            done
          fi

          # Check if we found any examples
          if [ ${#examples[@]} -eq 0 ]; then
            echo "❌ No example directories found in $EXAMPLES_PATH"
            echo "matrix=[]" >> $GITHUB_OUTPUT
            echo "examples-count=0" >> $GITHUB_OUTPUT
            exit 1
          fi

          # Use jq to create compact JSON array (single line, no spaces)
          matrix_json=$(printf '%s\n' "${examples[@]}" | jq -R . | jq -s -c .)

          echo "matrix=$matrix_json" >> $GITHUB_OUTPUT
          echo "examples-count=${#examples[@]}" >> $GITHUB_OUTPUT

          echo "📊 Generated matrix for ${#examples[@]} examples: ${examples[*]}"
          echo "🔧 Matrix JSON: $matrix_json"

  # Second job: Test each example in parallel using matrix strategy
  test-examples:
    runs-on: ubuntu-latest
    needs: discover-examples
    if: needs.discover-examples.outputs.examples-count > 0
    strategy:
      fail-fast: false  # Don't cancel other jobs if one fails
      matrix:
        example: ${{ fromJson(needs.discover-examples.outputs.matrix) }}

    name: Test ${{ matrix.example }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Test Terraform Example
        id: test-example
        uses: ./.github/actions/test-examples
        with:
          example-path: 'examples/${{ matrix.example }}'
          terraform-version: ${{ github.event.inputs.terraform-version || 'latest' }}
          mock-project-id: 'mock-project-${{ matrix.example }}'
          mock-region: 'us-central1'
          mock-zone: 'us-central1-a'

      - name: Report Results
        if: always()
        run: |
          if [ "${{ steps.test-example.outcome }}" == "success" ]; then
            echo "✅ Example '${{ matrix.example }}' passed all tests"
            echo "📊 Test result: ${{ steps.test-example.outputs.test-result }}"
            echo "📊 Init success: ${{ steps.test-example.outputs.init-success }}"
            echo "📊 Plan success: ${{ steps.test-example.outputs.plan-success }}"
          else
            echo "❌ Example '${{ matrix.example }}' failed tests"
            echo "📊 Test result: ${{ steps.test-example.outputs.test-result }}"
            echo "📊 Init success: ${{ steps.test-example.outputs.init-success }}"
            echo "📊 Plan success: ${{ steps.test-example.outputs.plan-success }}"
            exit 1
          fi
