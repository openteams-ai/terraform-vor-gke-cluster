name: Test Terraform Examples

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'docs/examples/**'
      - '.github/workflows/test-examples.yml'
      - '.github/actions/test-examples/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'docs/examples/**'
      - '.github/workflows/test-examples.yml'
      - '.github/actions/test-examples/**'
  workflow_dispatch:
    inputs:
      examples-path:
        description: 'Path to examples directory'
        required: false
        default: 'docs/examples'
      terraform-version:
        description: 'Terraform version to use'
        required: false
        default: 'latest'

jobs:
  # First job: Generate the matrix of examples to test
  discover-examples:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      examples-count: ${{ steps.set-matrix.outputs.examples-count }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Discover example directories
        id: set-matrix
        run: |
          EXAMPLES_PATH="${{ github.event.inputs.examples-path || 'docs/examples' }}"
          echo "üîç Discovering examples in $EXAMPLES_PATH..."

          # Find all directories under examples path
          examples=()
          if [ -d "$EXAMPLES_PATH" ]; then
            for example_dir in "$EXAMPLES_PATH"/*/; do
              if [ -d "$example_dir" ]; then
                example_name=$(basename "$example_dir")
                examples+=("$example_name")
                echo "üìÅ Found example: $example_name"
              fi
            done
          fi

          # Check if we found any examples
          if [ ${#examples[@]} -eq 0 ]; then
            echo "‚ùå No example directories found in $EXAMPLES_PATH"
            echo "matrix=[]" >> $GITHUB_OUTPUT
            echo "examples-count=0" >> $GITHUB_OUTPUT
            exit 1
          fi

          # Convert bash array to JSON array for matrix
          printf -v examples_json '%s\n' "${examples[@]}" | jq -R . | jq -s .
          echo "matrix=$examples_json" >> $GITHUB_OUTPUT
          echo "examples-count=${#examples[@]}" >> $GITHUB_OUTPUT

          echo "üìä Generated matrix for ${#examples[@]} examples: ${examples[*]}"

  # Second job: Test each example in parallel using matrix strategy
  test-examples:
    runs-on: ubuntu-latest
    needs: discover-examples
    if: needs.discover-examples.outputs.examples-count > 0
    strategy:
      fail-fast: false  # Don't cancel other jobs if one fails
      matrix:
        example: ${{ fromJson(needs.discover-examples.outputs.matrix) }}

    name: Test ${{ matrix.example }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Test Terraform Example
        id: test-example
        uses: ./.github/actions/test-examples
        with:
          examples-path: 'docs/examples/${{ matrix.example }}'
          terraform-version: ${{ github.event.inputs.terraform-version || 'latest' }}
          mock-project-id: 'mock-project-${{ matrix.example }}'
          mock-region: 'us-central1'
          mock-zone: 'us-central1-a'

      - name: Report Results
        if: always()
        run: |
          if [ "${{ steps.test-example.outcome }}" == "success" ]; then
            echo "‚úÖ Example '${{ matrix.example }}' passed all tests"
            echo "üìä Examples tested: ${{ steps.test-example.outputs.examples-tested }}"
            echo "üìä Examples passed: ${{ steps.test-example.outputs.examples-passed }}"
          else
            echo "‚ùå Example '${{ matrix.example }}' failed tests"
            exit 1
          fi

  # Third job: Collect results and provide summary
  test-summary:
    runs-on: ubuntu-latest
    needs: [discover-examples, test-examples]
    if: always() && needs.discover-examples.outputs.examples-count > 0
    steps:
      - name: Generate Test Summary
        run: |
          echo "# üß™ Terraform Examples Test Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          TOTAL_EXAMPLES="${{ needs.discover-examples.outputs.examples-count }}"

          if [ "${{ needs.test-examples.result }}" == "success" ]; then
            echo "‚úÖ **All $TOTAL_EXAMPLES examples passed validation!**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "üéâ Every Terraform example configuration is valid and can be planned successfully." >> $GITHUB_STEP_SUMMARY
          elif [ "${{ needs.test-examples.result }}" == "failure" ]; then
            echo "‚ùå **Some examples failed validation**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Please check the individual job results above to see which examples failed." >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Total Examples:** $TOTAL_EXAMPLES" >> $GITHUB_STEP_SUMMARY
            echo "**Status:** Some failed - see individual results" >> $GITHUB_STEP_SUMMARY
          else
            echo "‚ö†Ô∏è **Test execution had issues**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Some tests may have been cancelled or encountered unexpected errors." >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "---" >> $GITHUB_STEP_SUMMARY
          echo "*Tests run in parallel using matrix strategy for faster feedback*" >> $GITHUB_STEP_SUMMARY

      - name: Final Status Check
        run: |
          if [ "${{ needs.test-examples.result }}" != "success" ]; then
            echo "‚ùå One or more examples failed validation"
            exit 1
          else
            echo "‚úÖ All examples passed validation successfully!"
          fi
