name: "Generate Terraform Documentation"

on:
  push:
    branches: [ "main"]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  terraform-docs:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write


    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.head_ref }}

      - name: Install terraform-docs and tofu
        run: |
          make install-tools

      - name: Update/Generate Terraform documentation
        run: |
          echo "üìö Generating Terraform documentation..."
          make docs

      - name: Create documentation index
        run: |
          echo "üìö Creating documentation index..."

          cat > docs/README.md << 'EOF'
          # Vor Terraform GKE Module Documentation

          This directory contains detailed documentation for the Vor Terraform GKE module.

          ## Component Documentation

          Each component of the module has its own detailed documentation:

          EOF

          # Add component docs to index
          for component_doc in docs/components/*.md; do
            if [ -f "$component_doc" ]; then
              component_name=$(basename "$component_doc" .md | sed 's/-header//')
              if [ "$component_name" != "*" ] && [[ ! "$component_name" =~ -header$ ]]; then
                echo "- [${component_name^} Component](components/${component_name}.md)" >> docs/README.md
              fi
            fi
          done

          cat >> docs/README.md << 'EOF'

          ## Additional Resources

          - [Main README](../README.md) - Quick start and overview
          - [Labeling Conventions](../.labeling-conventions.md) - Resource labeling strategy
          - [Copyright Information](../COPYRIGHT.md) - Copyright and licensing details
          EOF


      # https://github.com/terraform-docs/gh-actions/issues/90
      - name: Fix .git owner
        run: |
          chown runner:docker -R .git

      - name: Check for changes
        id: verify-changed-files
        run: |
          echo "üîç Checking for documentation changes..."
          git status --porcelain

          # Debug: Check file permissions for changed files
          echo "üêõ File permissions for changed files:"
          git status --porcelain | while read status file; do
            if [ -f "$file" ]; then
              ls -la "$file"
            fi
          done

          # Check for changes in README.md and docs/ directory
          if git diff --quiet HEAD -- README.md docs/; then
            echo "üìù No documentation changes detected"
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "üìù Documentation changes detected:"
            git diff --name-only HEAD -- README.md docs/
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push changes
        if: steps.verify-changed-files.outputs.changed == 'true'
        env:
          GITHUB_AUTHOR: github-actions[bot]
          COMMIT_MSG: "[skip ci] docs: auto-update terraform documentation"
        run: |
          sudo chown -R runner:docker .git/objects
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "${{ env.GITHUB_AUTHOR }}"

          git add docs/ README.md

          echo "üìù Committing changes..."
          git commit -m "${{ env.COMMIT_MSG }}"

          echo "üìù Determining target branch..."
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            TARGET_BRANCH="${{ github.head_ref }}"
          else
            TARGET_BRANCH="${{ github.ref_name }}"
          fi

          echo "üìù Pushing to branch: $TARGET_BRANCH"
          git push origin HEAD:$TARGET_BRANCH
