name: "Generate Terraform Documentation"

on:
  push:
    branches: [ "main"]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  terraform-docs:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write


    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Create docs directory structure
        run: |
          mkdir -p docs/components

      - name: Generate main README documentation
        uses: terraform-docs/gh-actions@v1.4.1
        with:
          working-dir: .
          config-file: .terraform-docs/main.yml
          output-file: README.md
          output-method: inject
          git-push: "false"

      - name: Generate component documentation
        run: |
          echo "📚 Generating component documentation..."

          # Create header files if they don't exist
          declare -A components=(
            ["cluster"]="GKE cluster configuration and security settings"
            ["network"]="VPC, subnets, and networking components"
            ["nodes"]="Node pools and compute configuration"
            ["policies"]="Security policies and constraints"
          )

          for component in "${!components[@]}"; do
            if [ ! -f "docs/components/${component}-header.md" ]; then
              cat > docs/components/${component}-header.md << EOF
          # ${component^} Component

          ${components[$component]}

          This document provides detailed information about the ${component} component of the Vor Terraform GKE module.
          EOF
            fi
          done

      - name: Generate cluster component docs
        uses: terraform-docs/gh-actions@v1.4.1
        with:
          working-dir: .
          config-file: .terraform-docs/cluster.yml
          output-file: docs/components/cluster.md
          output-method: replace

      - name: Generate network component docs
        uses: terraform-docs/gh-actions@v1.4.1
        with:
          working-dir: .
          config-file: .terraform-docs/network.yml
          output-file: docs/components/network.md
          output-method: replace

      - name: Generate nodes component docs
        uses: terraform-docs/gh-actions@v1.4.1
        with:
          working-dir: .
          config-file: .terraform-docs/nodes.yml
          output-file: docs/components/nodes.md
          output-method: replace

      - name: Generate policies component docs
        uses: terraform-docs/gh-actions@v1.4.1
        with:
          working-dir: .
          config-file: .terraform-docs/policies.yml
          output-file: docs/components/policies.md
          output-method: replace



      - name: Create documentation index
        run: |
          echo "📚 Creating documentation index..."

          cat > docs/README.md << 'EOF'
          # Vor Terraform GKE Module Documentation

          This directory contains detailed documentation for the Vor Terraform GKE module.

          ## Component Documentation

          Each component of the module has its own detailed documentation:

          EOF

          # Add component docs to index
          for component_doc in docs/components/*.md; do
            if [ -f "$component_doc" ]; then
              component_name=$(basename "$component_doc" .md | sed 's/-header//')
              if [ "$component_name" != "*" ] && [[ ! "$component_name" =~ -header$ ]]; then
                echo "- [${component_name^} Component](components/${component_name}.md)" >> docs/README.md
              fi
            fi
          done

          cat >> docs/README.md << 'EOF'

          ## Additional Resources

          - [Main README](../README.md) - Quick start and overview
          - [Labeling Conventions](../.labeling-conventions.md) - Resource labeling strategy
          - [Copyright Information](../COPYRIGHT.md) - Copyright and licensing details
          EOF

      - name: Check for changes
        id: verify-changed-files
        run: |
          echo "🔍 Checking for documentation changes..."
          git status --porcelain

          # Debug: Check file permissions for changed files
          echo "🐛 File permissions for changed files:"
          git status --porcelain | while read status file; do
            if [ -f "$file" ]; then
              ls -la "$file"
            fi
          done

          if git diff --quiet HEAD; then
            echo "📝 No changes detected"
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "📝 Changes detected:"
            git diff --name-only HEAD
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      # https://github.com/terraform-docs/gh-actions/issues/90
      - name: Fix .git owner
        run: sudo chown runner:docker -R .git

      - name: Commit and push changes
        if: steps.verify-changed-files.outputs.changed == 'true'
        env:
          GITHUB_AUTHOR: github-actions[bot]
          COMMIT_MSG: "[skip ci] docs: auto-update terraform documentation"
        run: |
          echo "📝 Configuring git..."
          sudo chown -R runner:docker .git/objects
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "${{ env.GITHUB_AUTHOR }}"

          echo "📝 Adding changed files..."
          git add docs/ README.md

          echo "📝 Committing changes..."
          git commit -m "${{ env.COMMIT_MSG }}"

          echo "📝 Pushing changes..."
          git push origin HEAD:${{ github.head_ref || github.ref_name }}
