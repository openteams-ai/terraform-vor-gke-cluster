name: "Terraform Static Checks"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  terraform-validate:
    name: Terraform Format & Validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "~1.5"

      - name: Terraform Format Check
        run: |
          echo "🔍 Checking Terraform formatting..."
          terraform fmt -check -recursive -diff .
          echo "✅ Formatting OK"

      - name: Terraform Validate
        run: |
          echo "🔍 Validating Terraform configurations..."
          terraform init -backend=false
          terraform validate
          for example in examples/*/; do
            [ -d "$example" ] || continue
            echo "🔍 Validating example: $example"
            pushd "$example" > /dev/null
            terraform init -backend=false
            terraform validate
            popd > /dev/null
          done
          echo "✅ All configurations valid"

  terraform-tflint:
    name: Terraform TFLint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: v0.52.0

      - name: Create TFLint Config
        run: |
          cat > .tflint.hcl << 'EOF'
          plugin "terraform" {
            enabled = true
            preset  = "recommended"
          }
          plugin "google" {
            enabled = true
            version = "0.25.0"
            source  = "github.com/terraform-linters/tflint-ruleset-google"
          }
          rule "terraform_required_providers" { enabled = true }
          rule "terraform_required_version"   { enabled = true }
          rule "terraform_naming_convention"  { enabled = true }
          rule "terraform_documented_variables" { enabled = true }
          rule "terraform_documented_outputs"   { enabled = true }
          EOF

      - name: Run TFLint
        run: |
          echo "🔍 Running TFLint..."
          tflint --init
          tflint --format=compact
          echo "✅ TFLint OK"

  security-scan:
    name: Security Scans (Trivy & Checkov)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Python (for Checkov)
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: config
          format: table
          output: trivy-results.txt
          exit-code: 0
          severity: HIGH,CRITICAL
          ignore-unfixed: true
          vuln-type: os,library
          skip-dirs: examples

      - name: Run Checkov Security Scan
        uses: bridgecrewio/checkov-action@v12
        with:
          directory: .
          framework: terraform
          quiet: true
          compact: true
          output_file_path: checkov-results.txt

      - name: Upload Security Scan Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-scan-results
          path: |
            trivy-results.txt
            checkov-results.txt
          retention-days: 30

  test-examples:
    name: Test Examples
    runs-on: ubuntu-latest
    needs: [terraform-validate]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Test Example Configurations
        uses: ./.github/actions/test-examples
        with:
          examples-path: 'examples'
          terraform-version: '~1.5'
          mock-project-id: 'mock-project'
          mock-region: 'us-central1'
          mock-zone: 'us-central1-a'
